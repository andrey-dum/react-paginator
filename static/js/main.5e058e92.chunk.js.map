{"version":3,"sources":["utils.js","Follower.jsx","App.js","useFetch.js","reportWebVitals.js","index.js"],"names":["paginate","followers","numberOfPages","Math","ceil","length","Array","from","_","index","start","slice","Follower","avatar_url","html_url","login","className","src","alt","href","App","useState","loading","setLoading","data","setData","getItems","a","fetch","response","json","useEffect","useFetch","page","setPage","setFollowers","map","follower","id","onClick","oldPage","prevPage","item","handlePage","nextPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAYeA,EAZE,SAACC,GAChB,IACMC,EAAgBC,KAAKC,KAAKH,EAAUI,OADrB,IAQrB,OALqBC,MAAMC,KAAK,CAAEF,OAAQH,IAAiB,SAACM,EAAGC,GAC7D,IAAMC,EAJa,GAILD,EACd,OAAOR,EAAUU,MAAMD,EAAOA,EALX,QCaRE,EAZE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACxC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKJ,EAAYK,IAAKH,IAC3B,mCAAMA,KACN,mBAAGI,KAAML,EAAUE,UAAU,MAA7B,8BCqESI,MAvEf,WAAgB,IAAD,ECAS,WAAO,IAAD,EACEC,oBAAS,GADX,mBACrBC,EADqB,KACZC,EADY,OAEJF,mBAAS,IAFL,mBAErBG,EAFqB,KAEfC,EAFe,KAItBC,EAAQ,uCAAG,8BAAAC,EAAA,sEACQC,MAPf,+DAMO,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETN,EAFS,OAGfC,EAAQzB,EAASwB,IACjBD,GAAW,GAJI,2CAAH,qDAUd,OAHAQ,qBAAU,WACRL,MACC,IACI,CAAEJ,UAASE,QDbQQ,GAAlBV,EADK,EACLA,QAASE,EADJ,EACIA,KADJ,EAEWH,mBAAS,GAFpB,mBAENY,EAFM,KAEAC,EAFA,OAGqBb,mBAAS,IAH9B,mBAGNpB,EAHM,KAGKkC,EAHL,KAiCb,OA5BAJ,qBAAU,WACJT,GACJa,EAAaX,EAAKS,MACjB,CAACX,EAASW,IA0BX,iCACE,sBAAKjB,UAAU,gBAAf,UACE,6BAAKM,EAAU,aAAe,eAC9B,qBAAKN,UAAU,iBAEjB,0BAASA,UAAU,YAAnB,UACE,qBAAKA,UAAU,YAAf,SACGf,EAAUmC,KAAI,SAACC,GACd,OAAO,cAAC,EAAD,eAAgCA,GAAjBA,EAASC,UAGjChB,GACA,sBAAKN,UAAU,gBAAf,UACE,wBAAQA,UAAU,WAAWuB,QA5BtB,WACfL,GAAQ,SAACM,GACP,IAAIC,EAAWD,EAAU,EAIzB,OAHIC,EAAW,IACbA,EAAWjB,EAAKnB,OAAS,GAEpBoC,MAsBD,kBAGCjB,EAAKY,KAAI,SAACM,EAAMjC,GACf,OACE,wBAEEO,UAAS,mBAAcP,IAAUwB,EAAO,aAAe,MACvDM,QAAS,kBA1BN,SAAC9B,GAClByB,EAAQzB,GAyBqBkC,CAAWlC,IAH5B,SAKGA,EAAQ,GAJJA,MAQX,wBAAQO,UAAU,WAAWuB,QAnDtB,WACfL,GAAQ,SAACM,GACP,IAAII,EAAWJ,EAAU,EAIzB,OAHII,EAAWpB,EAAKnB,OAAS,IAC3BuC,EAAW,GAENA,MA6CD,4BEtDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e058e92.chunk.js","sourcesContent":["const paginate = (followers) => {\r\n  const itemsPerPage = 10\r\n  const numberOfPages = Math.ceil(followers.length / itemsPerPage)\r\n\r\n  const newFollowers = Array.from({ length: numberOfPages }, (_, index) => {\r\n    const start = index * itemsPerPage\r\n    return followers.slice(start, start + itemsPerPage)\r\n  })\r\n\r\n  return newFollowers\r\n}\r\n\r\nexport default paginate","import React from 'react'\r\n\r\nconst Follower = ({ avatar_url, html_url, login }) => {\r\n  return (\r\n    <div className='card'>\r\n      <img src={avatar_url} alt={login} />\r\n      <h4>${login}</h4>\r\n      <a href={html_url} className='btn'>\r\n        view profile\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Follower","import React, { useState, useEffect } from 'react'\nimport { useFetch } from './useFetch'\nimport Follower from './Follower'\n\n\nfunction App() {\n  const { loading, data } = useFetch()\n  const [page, setPage] = useState(0)\n  const [followers, setFollowers] = useState([])\n\n  useEffect(() => {\n    if (loading) return;\n    setFollowers(data[page])\n  }, [loading, page])\n\n  const nextPage = () => {\n    setPage((oldPage) => {\n      let nextPage = oldPage + 1\n      if (nextPage > data.length - 1) {\n        nextPage = 0\n      }\n      return nextPage\n    })\n  }\n  const prevPage = () => {\n    setPage((oldPage) => {\n      let prevPage = oldPage - 1\n      if (prevPage < 0) {\n        prevPage = data.length - 1\n      }\n      return prevPage\n    })\n  }\n\n  const handlePage = (index) => {\n    setPage(index)\n  }\n\n  return (\n    <main>\n      <div className='section-title'>\n        <h1>{loading ? 'loading...' : 'pagination'}</h1>\n        <div className='underline'></div>\n      </div>\n      <section className='followers'>\n        <div className='container'>\n          {followers.map((follower) => {\n            return <Follower key={follower.id} {...follower} />\n          })}\n        </div>\n        {!loading && (\n          <div className='btn-container'>\n            <button className='prev-btn' onClick={prevPage}>\n              prev\n            </button>\n            {data.map((item, index) => {\n              return (\n                <button\n                  key={index}\n                  className={`page-btn ${index === page ? 'active-btn' : null}`}\n                  onClick={() => handlePage(index)}\n                >\n                  {index + 1}\n                </button>\n              )\n            })}\n            <button className='next-btn' onClick={nextPage}>\n              next\n            </button>\n          </div>\n        )}\n      </section>\n    </main>\n  )\n}\n\nexport default App","\r\nimport { useState, useEffect } from 'react'\r\nimport paginate from './utils'\r\nconst url = 'https://api.github.com/users/gaearon/followers?per_page=100'\r\n\r\nexport const useFetch = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [data, setData] = useState([])\r\n\r\n  const getItems = async () => {\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    setData(paginate(data))\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n  return { loading, data }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}